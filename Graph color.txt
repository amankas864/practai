class Graph:
    def __init__(self, V):
        self.V = V
        self.graph = [[] for _ in range(V)]

    def add_edge(self, u, v):
        self.graph[u].append(v)
        self.graph[v].append(u)

    def greedy_coloring(self):
        result = [-1] * self.V  
        result[0] = 0
        available = [False] * self.V

        for u in range(1, self.V):
            for v in self.graph[u]:
                available[result[v]] = True
            result[u] = next(color for color, avail_color in enumerate(available) if not avail_color)
            available = [False] * self.V
            available[result[u]] = True

        for u, color in enumerate(result):
            print(f"Vertex {u} --> Color {color}")

graph = Graph(5)
edges = [(0, 1), (0, 2), (1, 2), (1, 3), (2, 3), (3, 4)]
for edge in edges:
    graph.add_edge(*edge)

print("Coloring of vertices:")
graph.greedy_coloring()
